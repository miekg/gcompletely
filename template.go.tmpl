# {{.Command}} completion

# Generated by gompletely (https://github.com/miekg/gompletely)

{{.FunctionName}}_filter() {
  local words="$1"
  local cur=${COMP_WORDS[COMP_CWORD]}
  local result=()

  if [[ "${cur:0:1}" == "-" ]]; then
    echo "$words"

  else
    for word in $words; do
      [[ "${word:0:1}" != "-" ]] && result+=("$word")
    done

    echo "${result[*]}"

  fi
}

{{.FunctionName}}() {
  local cur=${COMP_WORDS[COMP_CWORD]}
  local compwords=("${COMP_WORDS[@]:1:$COMP_CWORD-1}")
  local compline="${compwords[*]}"

{{if .Debug}}
  if [[ -n "$COMPLETELY_DEBUG" ]]; then
    echo "compline: '$compline'" > 'completely-debug.txt'
    echo "cur:      '$cur'" >> 'completely-debug.txt'
  fi
{{end}}

  case "$compline" in
{{range .Patterns}}
	{{ .CaseString }}
	while read -r; do COMPREPLY+=("$REPLY"); done < <(compgen {{.Compgen}} -- "$cur")
      ;;

{{end}}
  esac
} &&
complete -F {{.FunctionName}} {{.Command}}
